name: Delete
on:
  workflow_call:
    inputs:
      aws-env:
        description: "AWS Elastic Beanstalk Environment"
        required: true
        default: "gha-course-staging"
        type: string
      github-env:
        description: "Github Environment"
        required: true
        default: "staging"
        type: string
      report-pr:
        description: "PR to add report comments to"
        type: number

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.aws-env }}-${{ inputs.github-env }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-22.04
    environment:
      name: ${{ inputs.github-env }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Update Pull Request (Start)
        uses: actions/github-script@v6
        if: inputs.report-pr
        continue-on-error: true
        with:
          script: |
            const comment = `### ⏳ Deletion in progress...
            
            [You can monitor the progress here.](https://github.com/${{github.repository}}/actions/runs/${{ github.run_id }})
            `;
            
            github.action.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ inputs.report-pr }},
              body: comment
            })

      - name: Install EB CLI
        id: install-eb-cli
        run: pip install awsebcli
      - name: Get AWS ENV Name
        id: get-env-name
        shell: bash
        run: |
          set -euo pipefail
          app="${{ vars.AWS_EB_APP_NAME }}"
          env_name="${{ inputs['aws-env'] }}"
          name=$(aws elasticbeanstalk describe-environments \
            --application-name "$app" \
            --environment-names "$env_name" \
            --query 'Environments[0].EnvironmentName' \
            --output text)
          echo "aws_env=$name" >> "$GITHUB_OUTPUT"
      - name: Get AWS ENV Status
        id: get-env-status
        shell: bash
        run: |
          set -euo pipefail
          status=$(aws elasticbeanstalk describe-environments \
            --application-name "${{ vars.AWS_EB_APP_NAME }}" \
            --environment-names "${{ inputs['aws-env'] }}" \
            --query 'Environments[0].Status' \
            --output text)
          echo "aws_env_status=$status" >> "$GITHUB_OUTPUT"
      - name: Initialize EB
        shell: bash
        run: |
          eb init "${{ vars.AWS_EB_APP_NAME }}" \
            --platform "${{ vars.AWS_EB_PLATFORM }}" \
            --region "${{ vars.AWS_REGION }}"
      - name: Delete Environment
        id: terminate
        if: ${{ steps.get-env-name.outputs.aws_env != 'None' || steps.get-env-status.outputs.aws_env_status != 'Terminated' }}
        run: |
          eb terminate "${{aws-env}}"
      - name: show deletion result
        run: echo '${{steps.terminate.outputs}}'


